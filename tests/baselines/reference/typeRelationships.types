=== tests/cases/conformance/types/thisType/typeRelationships.ts ===
class C {
>C : C

    self = this;
>self : this
>this : this

    c = new C();
>c : C
>new C() : C
>C : typeof C

    foo() {
>foo : () => C

        return this;
>this : C
    }
    f1() {
>f1 : () => void

        this.c = this.self;
>this.c = this.self : C
>this.c : C
>this : C
>c : C
>this.self : C
>this : C
>self : C

        this.self = this.c;  // Error
>this.self = this.c : C
>this.self : C
>this : C
>self : C
>this.c : C
>this : C
>c : C
    }
    f2() {
>f2 : () => void

        var a: C[];
>a : C[]

        var a = [this, this.c];  // C[] since this is subtype of C
>a : C[]
>[this, this.c] : C[]
>this : C
>this.c : C
>this : C
>c : C

        var b: this[];
>b : this[]

        var b = [this, this.self, null, undefined];
>b : this[]
>[this, this.self, null, undefined] : C[]
>this : C
>this.self : C
>this : C
>self : C
>null : null
>undefined : undefined
    }
    f3(b: boolean) {
>f3 : (b: boolean) => C
>b : boolean

        return b ? this.c : this.self;  // Should be C
>b ? this.c : this.self : C
>b : boolean
>this.c : C
>this : C
>c : C
>this.self : C
>this : C
>self : C
    }
}

class D extends C {
>D : D
>C : C

    self1 = this;
>self1 : this
>this : this

    self2 = this.self;
>self2 : this
>this.self : this
>this : this
>self : this

    self3 = this.foo();
>self3 : C
>this.foo() : C
>this.foo : () => C
>this : this
>foo : () => C

    d = new D();
>d : D
>new D() : D
>D : typeof D

    bar() {
>bar : () => void

        this.self = this.self1;
>this.self = this.self1 : D
>this.self : D
>this : D
>self : D
>this.self1 : D
>this : D
>self1 : D

        this.self = this.self2;
>this.self = this.self2 : D
>this.self : D
>this : D
>self : D
>this.self2 : D
>this : D
>self2 : D

        this.self = this.self3;
>this.self = this.self3 : C
>this.self : D
>this : D
>self : D
>this.self3 : C
>this : D
>self3 : C

        this.self1 = this.self;
>this.self1 = this.self : D
>this.self1 : D
>this : D
>self1 : D
>this.self : D
>this : D
>self : D

        this.self2 = this.self;
>this.self2 = this.self : D
>this.self2 : D
>this : D
>self2 : D
>this.self : D
>this : D
>self : D

        this.self3 = this.self;
>this.self3 = this.self : D
>this.self3 : C
>this : D
>self3 : C
>this.self : D
>this : D
>self : D

        this.d = this.self;
>this.d = this.self : D
>this.d : D
>this : D
>d : D
>this.self : D
>this : D
>self : D

        this.d = this.c;  // Error
>this.d = this.c : C
>this.d : D
>this : D
>d : D
>this.c : C
>this : D
>c : C

        this.self = this.d;  // Error
>this.self = this.d : D
>this.self : D
>this : D
>self : D
>this.d : D
>this : D
>d : D

        this.c = this.d;
>this.c = this.d : D
>this.c : C
>this : D
>c : C
>this.d : D
>this : D
>d : D
    }
}

