=== tests/cases/compiler/narrowingTypeof.ts ===
type __String = (string & { __escapedIdentifier: void }) | (void & { __escapedIdentifier: void });
>__String : Symbol(__String, Decl(narrowingTypeof.ts, 0, 0))
>__escapedIdentifier : Symbol(__escapedIdentifier, Decl(narrowingTypeof.ts, 0, 27))
>__escapedIdentifier : Symbol(__escapedIdentifier, Decl(narrowingTypeof.ts, 0, 68))

declare const s: __String;
>s : Symbol(s, Decl(narrowingTypeof.ts, 2, 13))
>__String : Symbol(__String, Decl(narrowingTypeof.ts, 0, 0))

declare let t: string | number | undefined;
>t : Symbol(t, Decl(narrowingTypeof.ts, 3, 11))

declare function assert(e: unknown): asserts e;
>assert : Symbol(assert, Decl(narrowingTypeof.ts, 3, 43))
>e : Symbol(e, Decl(narrowingTypeof.ts, 5, 24))
>e : Symbol(e, Decl(narrowingTypeof.ts, 5, 24))

assert(typeof s === "string");
>assert : Symbol(assert, Decl(narrowingTypeof.ts, 3, 43))
>s : Symbol(s, Decl(narrowingTypeof.ts, 2, 13))

t = s;
>t : Symbol(t, Decl(narrowingTypeof.ts, 3, 11))
>s : Symbol(s, Decl(narrowingTypeof.ts, 2, 13))

