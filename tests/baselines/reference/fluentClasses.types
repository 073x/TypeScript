=== tests/cases/conformance/types/thisType/fluentClasses.ts ===
class A {
>A : A

    foo() {
>foo : () => A

        return this;
>this : A
    }
}
class B extends A {
>B : B
>A : A

    bar() {
>bar : () => B

        return this;
>this : B
    }
}
class C extends B {
>C : C
>B : B

    baz() {
>baz : () => C

        return this;
>this : C
    }
}
var c: C;
>c : C

var z = c.foo().bar().baz();  // Fluent pattern
>z : any
>c.foo().bar().baz() : any
>c.foo().bar().baz : any
>c.foo().bar() : any
>c.foo().bar : any
>c.foo() : A
>c.foo : () => A
>c : C
>foo : () => A
>bar : any
>baz : any

